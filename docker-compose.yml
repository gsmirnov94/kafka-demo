services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - kafka-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

  # Alternative Schema Registry UI - using a working image
  schema-registry-ui:
    image: landoop/schema-registry-ui:latest
    container_name: schema-registry-ui
    depends_on:
      - schema-registry
    ports:
      - "8082:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
      SCHEMAREGISTRY_UI_TITLE: "Schema Registry UI"
      SCHEMAREGISTRY_UI_READONLY: "false"

  # Producer service
  producer:
    build: ./producer
    container_name: producer
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "3000:3000"
    environment:
      KAFKA_BROKER: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - ./producer:/app
      - /app/node_modules

  # Consumer service
  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "3001:3001"
    environment:
      KAFKA_BROKER: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - ./consumer:/app
      - /app/node_modules

  # Frontend service
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_PRODUCER_URL: http://localhost:3000
        REACT_APP_CONSUMER_URL: http://localhost:3001
    container_name: frontend
    depends_on:
      - producer
      - consumer
    ports:
      - "3002:3000"
    environment:
      REACT_APP_PRODUCER_URL: http://localhost:3000
      REACT_APP_CONSUMER_URL: http://localhost:3001

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
